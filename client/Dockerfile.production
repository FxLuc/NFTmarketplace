# ==== CONFIGURE FOR PRODUCTION =====
FROM node:16.18-alpine AS production

# Set working directory
WORKDIR client

# Cache and Install dependencies
COPY package.json .
COPY package-lock.json .

# Install dependencies (npm ci makes sure the exact versions in the lockfile gets installed)
RUN npm ci

# Copy client files
COPY . .

# ==== BUILD AND TEST =====
# Test the app
RUN CI=true npm run test

# Build the app
RUN CI=true npm run build-production

# ==== RUN =======
# Set the env to "production"
ENV NODE_ENV production

# Expose the port on which the app will be running (3000 is the default that `serve` uses)
EXPOSE 3000:3000

# Start the app
CMD [ "npx", "serve", "build" ]

# Build the Docker image for the current folder and tag it with `fxethers-client-production`, file `Dockerfile.production`
# docker build -t fxethers-client-production -f Dockerfile.production .

# Check the image was created
# docker images | grep fxethers-client-production

# Run the image in detached mode and map port 3000 inside the container with 3000 on current host
# docker run -p 3000:3000 -d fxethers-client-production